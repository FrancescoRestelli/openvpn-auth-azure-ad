---
on:
  push:
    tags:
      - 'v*'

name: Release

jobs:
  create_release:
    name: Create Release
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Identify Prerelease
        # This is a workaround while waiting for create-release action
        # to implement auto pre-release based on tag
        id: prerelease
        run: |
          [[ "${VERSION}" =~ .*rc.* || "${VERSION}" =~ .*beta.* || "${VERSION}" =~ .*alpha.* ]] && echo "::set-output name=PRERELEASE::true" || true
        env:
          VERSION: ${{ steps.get_version.outputs.VERSION }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.1.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: ${{ steps.prerelease.outputs.PRERELEASE }}
          body: |-
            # CHANGELOG
            * https://github.com/jkroepke/openvpn-auth-azure-ad/blob/${{ steps.get_version.outputs.VERSION }}/CHANGELOG.md
            ## DockerHub
            * https://hub.docker.com/r/jkroepke/openvpn-auth-azure-ad/tags?name=${{ steps.get_version.outputs.VERSION }}
  pypi:
    name: Upload to PyPi
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
      - name: Create dist package
        run: python3 setup.py sdist
      - name: Publish package
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
